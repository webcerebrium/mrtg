# 1.
# /usr/bin/indexmaker --title="`hostname -s | tr [:lower:] [:upper:]` MRTG" --pagetop="<CENTER>" --pageend="<HR></CENTER>" --columns=1 --enumerate --nolegend --prefix="/mrtg/" --output=/var/www/mrtg/index.shtml /etc/mrtg/mrtg.cfg
#
# 2.
# sed -i 's|<H1>\(.\+\) MRTG</H1>|<H1>\1 MRTG</H1>\n<HR>\n<P align="center"><A href="ip/">IP ALIASES STATS</A></P>\n<HR>\n<P align="center"></P>\n<HR>|' /var/www/mrtg/index.shtml
#
# 3.
# sed -i 's|eth0-day.png"></A><BR></DIV>|eth0-day.png"></A><BR></DIV>\n<DIV><B><CENTER><!--#include file="95perc.php" --></CENTER></B></DIV>\n|' /var/www/mrtg/index.shtml
#
# 4.
# sed -i 's|<SMALL>.*</SMALL>||g' /var/www/mrtg/index.shtml

#
# MAJOR OPTIONS
#
Interval: 5
WorkDir: /var/www/mrtg/
LoadMIBs: /usr/share/snmp/mibs/UCD-SNMP-MIB.txt /usr/share/snmp/mibs/UCD-DISKIO-MIB.txt
EnableSNMPv3: yes


Target[eth_1]: ifInOctets.1&ifOutOctets.1:public@localhost
MaxBytes[eth_1]: 125000000
Title[eth_1]: Traffic Link 1
PageTop[eth_1]: <H1>Traffic Link 1</H1>
Options[eth_1]: nopercent, growright, bits, pngdate


Target[eth_2]: ifInOctets.2&ifOutOctets.2:public@localhost
MaxBytes[eth_2]: 125000000
Title[eth_2]: Traffic Link 2
PageTop[eth_2]: <H1>Traffic Link 2</H1>
Options[eth_2]: nopercent, growright, bits, pngdate



#
# Serving TCP connections
#
Target[tcp-est]: `cat /var/log/netstat.log | grep -c "SYN_SENT"; netstat -st 2>/dev/null | grep "connections established" | awk '{print $1}'; echo -ne "UNKNOWN\nUNKNOWN\n"`
Title[tcp-est]: Number of connections in ESTABLISHED/SYN_SENT state
PageTop[tcp-est]: <H1>Number of connections in ESTABLISHED/SYN_SENT state</H1>
Options[tcp-est]: gauge, nopercent, growright, perminute, pngdate
MaxBytes[tcp-est]: 10000
YLegend[tcp-est]: Connections
ShortLegend[tcp-est]: con
LegendI[tcp-est]: TCP Connections in SYN_SENT State
LegendO[tcp-est]: TCP Connections in ESTABLISHED State
Legend1[tcp-est]: TCP Connections in SYN_SENT State
Legend2[tcp-est]: TCP Connections in ESTABLISHED State

Target[tcp-close]: `cat /var/log/netstat.log | grep -c "CLOSE_WAIT"; cat /var/log/netstat.log | grep -c "TIME_WAIT"; echo -ne "UNKNOWN\nUNKNOWN\n" 2>/dev/null`
Title[tcp-close]: Number of connections in TIME_WAIT/CLOSE_WAIT state
PageTop[tcp-close]: <H1>Number of connections in TIME_WAIT/CLOSE_WAIT state</H1>
Options[tcp-close]: gauge, nopercent, growright, perminute, pngdate
MaxBytes[tcp-close]: 10000
YLegend[tcp-close]: Connections
ShortLegend[tcp-close]: con
LegendI[tcp-close]: TCP Connections in CLOSE_WAIT State
LegendO[tcp-close]: TCP Connections in TIME_WAIT State
Legend1[tcp-close]: TCP Connections in CLOSE_WAIT State
Legend2[tcp-close]: TCP Connections in TIME_WAIT State


#
# LOAD AVERAGE
#
Target[la]: laLoadInt.2&laLoadInt.1:public@localhost::15:10::2
Options[la]: nopercent, growright, gauge, integer, noinfo, pngdate
MaxBytes[la]: 100000
Title[la]: Load Average integer values (x100)
PageTop[la]: <h1>Load Average integer values (x100)</h1>
ShortLegend[la]: points
YLegend[la]: Integer
LegendI[la]: LA 5 min
LegendO[la]: LA 1 min
Legend1[la]: LA 5 min
Legend2[la]: LA 1 min

#
# CPU LOAD
#
Target[cpu]: (ssCpuRawWait.0&ssCpuRawUser.0:public@localhost::15:10::2 +
              memIndex.0&ssCpuRawNice.0:public@localhost::15:10::2 +
              memIndex.0&ssCpuRawSystem.0:public@localhost::15:10::2)/2
Options[cpu]: nopercent, growright, integer, pngdate
MaxBytes[cpu]: 100
Title[cpu]: CPU Load
PageTop[cpu]: <h1>CPU Load</h1>
Unscaled[cpu]: ymwd
YLegend[cpu]: Percents
ShortLegend[cpu]: %
LegendI[cpu]: CPU IOwait
LegendO[cpu]: CPU Load
Legend1[cpu]: CPU IOwait
Legend2[cpu]: CPU Load

#
# MEMORY
#
Target[memory]: memCached.0&memTotalReal.0:public@localhost::15:10::2 -
                memIndex.0&memAvailReal.0:public@localhost::15:10::2
Title[memory]: Memory usage
PageTop[memory]: <h1>Memory Usage</h1>
MaxBytes[memory]: 8199104000
Options[memory]: nopercent, growright, gauge, pngdate
kMG[memory]: K,M
kilo[memory]: 1024
ShortLegend[memory]: bytes
YLegend[memory]: Bytes
LegendI[memory]: Cached RAM
LegendO[memory]: Used RAM
Legend1[memory]: Cached RAM
Legend2[memory]: Used RAM

#
# Swap usage
#
Target[swap]: `cat /proc/swaps | grep / | awk '{print $3"\n"$4"\nUNKNOWN\nUNKNOWN"}'`
PageTop[swap]: <H1>Swap Memory</H1>
Options[swap]: nopercent,growright,gauge,noinfo
Title[swap]: Free Memory
MaxBytes[swap]: 10000000000000
kMG[swap]: k,M,G,T,P,X
YLegend[swap]: bytes
ShortLegend[swap]: bytes
LegendI[swap]:  Free Memory:
LegendO[swap]:
Legend1[swap]: Swap memory avail, in bytes

#
# Disk Space
#
Target[space]: `df / | grep /| awk '{print $3"\n"$4"\nUNKNOWN\nUNKNOWN"}'`
Title[space]: Disk Usage
PageTop[space]: <h1>Disk Usage</h1>
MaxBytes[space]: 8199104000
Options[space]: nopercent, growright, gauge, pngdate
kMG[space]: K,M,G
kilo[space]: 1024
ShortLegend[space]: bytes
YLegend[space]: Bytes
LegendI[space]: Space Used
LegendO[space]: Space Available
Legend1[space]: Space Used
Legend2[space]: Space Available


#
# NGINX CPU / MEMORY
#
Target[nginx_cpumem]: `ps ax -o %cpu,%mem,comm|grep nginx|awk 'BEGIN{cpu=0;mem=0}{cpu+=$1;mem+=$2}END{print cpu"\n"mem"\nUNKNOWN\nUNKNOWN"}'`
Options[nginx_cpumem]: nopercent, growright, gauge, noinfo, unknaszero, pngdate
MaxBytes[nginx_cpumem]: 100
Title[nginx_cpumem]: NGINX cpu / memory usage
PageTop[nginx_cpumem]: <h1>NGINX cpu / memory usage</h1>
ShortLegend[nginx_cpumem]: %
YLegend[nginx_cpumem]: Percents
Unscaled[nginx_cpumem]: ymwd
LegendI[nginx_cpumem]: CPU
LegendO[nginx_cpumem]: Memory
Legend1[nginx_cpumem]: CPU
Legend2[nginx_cpumem]: Memory

#
# MYSQL QUERIES
#
#Target[mysql_queries]: `/usr/bin/mysqladmin -u root  ver|awk '/Qu/{q=$4;s=$7}/Up/{u=$0}/Se/{v=$3}END{print q"\n"s"\n"u"\nMYSQL version "v}'|sed 's/Uptime:[[:space:]]\+//'`
#Options[mysql_queries]: nopercent, growright, integer, perminute, pngdate
#MaxBytes[mysql_queries]: 250000
#Title[mysql_queries]: MYSQL queries count
#PageTop[mysql_queries]: <h1>MYSQL queries count</h1>
#ShortLegend[mysql_queries]: q/m
#YLegend[mysql_queries]: Count
#LegendI[mysql_queries]: queries
#LegendO[mysql_queries]: slow queries
#Legend1[mysql_queries]: queries
#Legend2[mysql_queries]: slow queries

#
# MYSQL CPU / MEMORY
#
#Target[mysql_cpumem]: `ps ax -o %cpu,%mem,comm|grep mysqld|awk 'BEGIN{cpu=0;mem=0}{cpu+=$1;mem+=$2}END{print cpu"\n"mem"\nUNKNOWN\nUNKNOWN"}'`
#Options[mysql_cpumem]: nopercent, growright, gauge, noinfo, unknaszero, pngdate
#MaxBytes[mysql_cpumem]: 100
#Title[mysql_cpumem]: MYSQL cpu / memory usage
#PageTop[mysql_cpumem]: <h1>MYSQL cpu / memory usage</h1>
#ShortLegend[mysql_cpumem]: %
#YLegend[mysql_cpumem]: Percents
#Unscaled[mysql_cpumem]: ymwd
#LegendI[mysql_cpumem]: CPU
#LegendO[mysql_cpumem]: Memory
#Legend1[mysql_cpumem]: CPU
#Legend2[mysql_cpumem]: Memory

Target[sda_io]: diskIONRead.25&diskIONWritten.25:public@localhost::15:10::2
MaxBytes[sda_io]: 9999999999
Options[sda_io]: nopercent, growright, withzeroes, noinfo, pngdate
kilo[sda_io]: 1024
Title[sda_io]: DISK IO /dev/vda
PageTop[sda_io]: <h1>DISK IO /dev/vda FROM SNMP</h1>
ShortLegend[sda_io]: b/s
YLegend[sda_io]: Bytes/s
LegendI[sda_io]: READ IO
LegendO[sda_io]: WRITE IO
Legend1[sda_io]: READ IO
Legend2[sda_io]: WRITE IO

Pagetop[sda_util]: <H1> Disk Utilization /dev/vda (%)</H1>
Options[sda_util]: growright, gauge, nobanner, nopercent, pngdate
Title[sda_util]: vda Util %
MaxBytes[sda_util]: 100
AbsMax[sda_util]: 100
Target[sda_util]: `cat /var/log/iostat.log | grep vda | awk '{avgqu+=$9; await+=$10; util+=$12;}END{print await*avgqu/240000 "\n" util/50"\nUNKNOWN\nUNKNOWN"}'`
WithPeak[sda_util]: w m y
ShortLegend[sda_util]: %
YLegend[sda_util]: Disk Utilization /dev/vda (%)
LegendI[sda_util]: vda IOWait
LegendO[sda_util]: vda Utilization

Pagetop[sda_rwps]: <H1> IO Requests /dev/vda (rpm) </H1>
Options[sda_rwps]: growright, gauge, nobanner, nopercent, pngdate
Title[sda_rwps]: /dev/vda IO Requests
MaxBytes[sda_rwps]: 10000
AbsMax[sda_rwps]: 10000
Target[sda_rwps]: `cat /var/log/iostat.log | grep vda | awk '{rreq+=$4; wreq+=$5;}END{print rreq/50 "\n" wreq/50"\nUNKNOWN\nUNKNOWN"}'`
WithPeak[sda_rwps]: w m y
ShortLegend[sda_rwps]: rpm
YLegend[sda_rwps]: /dev/vda IO Requests
LegendI[sda_rwps]: vda Read requests per minute
LegendO[sda_rwps]: vda Write requests per minute


#
# END
#

